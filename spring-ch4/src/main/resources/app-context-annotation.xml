<?xml version="1.0" encoding="UTF-8"?>

        <!-- 1. Сначала объявляется пространство имен Spring, при этом по дефолту этим пространством является beans, используемое для объявления бинов, которые должны управляться Spring
        Пространство имен beans является базовым и обязательным - требуется для объявления бинов
        Платформа Spring предоставляет много других пространств для различных целей:
        - context - обеспечивает поддержку для конфигурирования ApplicationContext
        - p - предоставляет более простую конфигурацию DI для Setter Injection
        - c -  предоставляет более простую конфигурацию DI для Constructor Injection
        - util - предоставляет ряд полезных утилит для конфигурации DI
        - aop, tx - для поддержки АОП, транзакций и пр
       -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

       <description>XML-конфигурация Spring c поддержкой аннотаций</description>

       <!-- Для поддержки аннотаций в Spring необходимо поместить в XML-файл конфигурации 2 дескриптора
            1. Данный дескриптор сообщает Spring о необходимости просканировать кодовую базу на предмет требований зависимостей
       -->
       <context:annotation-config />

       <!-- 2. Данный дескриптор заставляет Spring сканировать код для поиска внедряемых бинов в рамках указанного пакета (и всех его подпакетов)
            можно определеть множество пакетов через [, ; пробел]. Дескроптор поддерживает включение/исключение сканирования компонентов для более точного управления
            В данном случае пропускаем классы, которым был назначен тип, заданный в выражении (класс или интерфейс)
            Для типа можно указать: annotation, regex, assignable, AspectJ, custom
       -->
       <context:component-scan base-package="org.billing.jlab.spring.ch4.annotation;org.billing.jlab.spring.ch4.annotation1">
              <context:exclude-filter type="assignable" expression="org.billing.jlab.spring.ch4.annotation1.Bean2" />
       </context:component-scan>

       <!--  Sample for constructor injection -->
       <bean id="message" class="java.lang.String" c:_0="This is a configurable message" />

       <!--  Sample for collection injection  -->
       <util:map id="map" map-class="java.util.HashMap">
              <entry key="someValue">
                     <value>Hello World!</value>
              </entry>
              <entry key="someBean">
                     <ref bean="oracle" />
              </entry>
       </util:map>
       <util:properties id="props">
              <prop key="firstName">Clarence</prop>
              <prop key="secondName">Ho</prop>
       </util:properties>
       <util:set id="set">
              <value>Hello World!</value>
              <ref bean="oracle" />
       </util:set>
       <util:list id="list">
              <value>Hello World!</value>
              <ref bean="oracle" />
       </util:list>
</beans>