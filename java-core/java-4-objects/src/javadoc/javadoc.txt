/**
Свойства объекта:
• Поведение (behavior) объекта— что с ним можно делать, и какие методы к нему можно применять.
• Состояние объекта — как этот объект реагирует на применение методов.
• Сущность (identity) объекта — чем данный объект отличается от других, характеризующихся таким же поведением и состоянием.

Состояние объекта может изменяться только в результате вызовов методов. Иначе принцип инкапсуляции не соблюден.
Эти основные характеристики могут влиять друг на друга. Например, состояние объекта может влиять на его поведение.
(например: если заказ "выполнен" или "оплачен", объект может отказаться выполнить вызов метода)

Простое эмпирическое правило для идентификации классов заключается в выделении имен существительных при анализе проблемной области. С другой стороны,
методы соответствуют глаголам. Разумеется, "правило имен существительных и глаголов" — это не более чем совет

Между классами существуют три общих отношения:
• зависимость ("использует uses-a"); (UML: ------>)
    класс зависит от другого класса, если его методы выполняют какие-либо действия с экземплярами этого класса
    Например, класс Order использует класс Account, поскольку объекты Order должны иметь доступ к объектам Account, чтобы проверить кредитоспособность заказчика
• агрегирование ("содержит, has-a"); Или association-связь. (UML: ромб+сплошная линия)
    Означает, что объект класса А содержит объекты класса В.
    Например: объект Order может содержать объекты класса Item.
• наследование ("является, is-a"). ((UML: стрелка белая+сплошная линия))
    Если класс А расширяет класс В, то класс А наследует методы класса В и, кроме них, имеет дополнительные возможности

*/
